"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegisterClient = exports.RegisterCallFactory = exports.APP_SPEC = void 0;
/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^2
 */
var algokit = __importStar(require("@algorandfoundation/algokit-utils"));
var algosdk_1 = require("algosdk");
exports.APP_SPEC = {
    "hints": {
        "addData(uint64,string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getData(uint64)(string,string)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "createApplication()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        }
    },
    "bare_call_config": {
        "no_op": "NEVER",
        "opt_in": "NEVER",
        "close_out": "NEVER",
        "update_application": "NEVER",
        "delete_application": "NEVER"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {
                "myMeta": {
                    "type": "bytes",
                    "key": "myMeta"
                }
            },
            "reserved": {}
        }
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjg4LjEKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJZXJyCgovLyBhZGREYXRhKHVpbnQ2NCxzdHJpbmcsc3RyaW5nKXZvaWQKKmFiaV9yb3V0ZV9hZGREYXRhOgoJLy8gZGF0YTogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglleHRyYWN0IDIgMAoKCS8vIGtleTogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglleHRyYWN0IDIgMAoKCS8vIGJveDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBhZGREYXRhKHVpbnQ2NCxzdHJpbmcsc3RyaW5nKXZvaWQKCWNhbGxzdWIgYWRkRGF0YQoJaW50IDEKCXJldHVybgoKLy8gYWRkRGF0YShib3g6IHVpbnQ2NCwga2V5OiBzdHJpbmcsIGRhdGE6IHN0cmluZyk6IHZvaWQKYWRkRGF0YToKCXByb3RvIDMgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CgoJLy8gY29udHJhY3RzL1JlZ2lzdGVyLmFsZ28udHM6MTIKCS8vIG1ldGE6IE1ldGFEYXRhID0gewoJLy8gICAgICAga2V5OiBrZXksCgkvLyAgICAgICBkYXRhOiBkYXRhLAoJLy8gICAgIH0KCWJ5dGUgMHggLy8gaW5pdGlhbCBoZWFkCglieXRlIDB4IC8vIGluaXRpYWwgdGFpbAoJYnl0ZSAweDAwMDQgLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJZnJhbWVfZGlnIC0yIC8vIGtleTogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtMyAvLyBkYXRhOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJcG9wIC8vIHBvcCBoZWFkIG9mZnNldAoJY29uY2F0IC8vIGNvbmNhdCBoZWFkIGFuZCB0YWlsCglmcmFtZV9idXJ5IDAgLy8gbWV0YTogTWV0YURhdGEKCgkvLyBjb250cmFjdHMvUmVnaXN0ZXIuYWxnby50czoxNgoJLy8gdGhpcy5teU1ldGEudmFsdWUgPSBtZXRhCglieXRlIDB4NmQ3OTRkNjU3NDYxIC8vICJteU1ldGEiCglmcmFtZV9kaWcgMCAvLyBtZXRhOiBNZXRhRGF0YQoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUmVnaXN0ZXIuYWxnby50czoxNwoJLy8gYXNzZXJ0KCF0aGlzLm1ldGFEYXRhKGJveCkuZXhpc3RzKQoJZnJhbWVfZGlnIC0xIC8vIGJveDogdWludDY0CglpdG9iCglib3hfbGVuCglzd2FwCglwb3AKCSEKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9SZWdpc3Rlci5hbGdvLnRzOjE4CgkvLyB0aGlzLm1ldGFEYXRhKGJveCkudmFsdWUgPSBtZXRhCglmcmFtZV9kaWcgLTEgLy8gYm94OiB1aW50NjQKCWl0b2IKCWR1cAoJYm94X2RlbAoJcG9wCglmcmFtZV9kaWcgMCAvLyBtZXRhOiBNZXRhRGF0YQoJYm94X3B1dAoJcmV0c3ViCgovLyBnZXREYXRhKHVpbnQ2NCkoc3RyaW5nLHN0cmluZykKKmFiaV9yb3V0ZV9nZXREYXRhOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBib3g6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgZ2V0RGF0YSh1aW50NjQpKHN0cmluZyxzdHJpbmcpCgljYWxsc3ViIGdldERhdGEKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBnZXREYXRhKGJveDogdWludDY0KTogTWV0YURhdGEKZ2V0RGF0YToKCXByb3RvIDEgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CgoJLy8gY29udHJhY3RzL1JlZ2lzdGVyLmFsZ28udHM6MjIKCS8vIG1ldGEgPSB0aGlzLm1ldGFEYXRhKGJveCkudmFsdWUKCWZyYW1lX2RpZyAtMSAvLyBib3g6IHVpbnQ2NAoJaXRvYgoJZnJhbWVfYnVyeSAwIC8vIHN0b3JhZ2Uga2V5Ly9tZXRhCgoJLy8gY29udHJhY3RzL1JlZ2lzdGVyLmFsZ28udHM6MjMKCS8vIHJldHVybiBtZXRhOwoJZnJhbWVfZGlnIDAgLy8gc3RvcmFnZSBrZXkvL21ldGEKCWJveF9nZXQKCWFzc2VydAoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCWVycgoKKmNhbGxfTm9PcDoKCW1ldGhvZCAiYWRkRGF0YSh1aW50NjQsc3RyaW5nLHN0cmluZyl2b2lkIgoJbWV0aG9kICJnZXREYXRhKHVpbnQ2NCkoc3RyaW5nLHN0cmluZykiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2FkZERhdGEgKmFiaV9yb3V0ZV9nZXREYXRhCgllcnIKCipwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudDoKCXByb3RvIDQgMwoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJY29uY2F0CglmcmFtZV9idXJ5IC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMSAvLyBlbGVtZW50CglkdXAKCWxlbgoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0CglidG9pCgkrCglpdG9iCglleHRyYWN0IDYgMgoJZnJhbWVfYnVyeSAtMiAvLyBoZWFkIG9mZnNldAoJZnJhbWVfZGlnIC0zIC8vIHR1cGxlIHRhaWwKCXN3YXAKCWNvbmNhdAoJZnJhbWVfYnVyeSAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0zIC8vIHR1cGxlIHRhaWwKCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
    },
    "contract": {
        "name": "Register",
        "desc": "",
        "methods": [
            {
                "name": "addData",
                "args": [
                    {
                        "name": "box",
                        "type": "uint64"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "type": "string"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "getData",
                "args": [
                    {
                        "name": "box",
                        "type": "uint64"
                    }
                ],
                "returns": {
                    "type": "(string,string)"
                }
            },
            {
                "name": "createApplication",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ]
    }
};
/**
 * Exposes methods for constructing all available smart contract calls
 */
var RegisterCallFactory = /** @class */ (function () {
    function RegisterCallFactory() {
    }
    Object.defineProperty(RegisterCallFactory, "create", {
        /**
         * Gets available create call factories
         */
        get: function () {
            return {
                /**
                 * Constructs a create call for the Register smart contract using the createApplication()void ABI method
                 *
                 * @param args Any args for the contract call
                 * @param params Any additional parameters for the call
                 * @returns A TypedCallParams object for the call
                 */
                createApplication: function (args, params) {
                    if (params === void 0) { params = {}; }
                    return __assign({ method: 'createApplication()void', methodArgs: Array.isArray(args) ? args : [] }, params);
                },
            };
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Constructs a no op call for the addData(uint64,string,string)void ABI method
     *
     * @param args Any args for the contract call
     * @param params Any additional parameters for the call
     * @returns A TypedCallParams object for the call
     */
    RegisterCallFactory.addData = function (args, params) {
        return __assign({ method: 'addData(uint64,string,string)void', methodArgs: Array.isArray(args) ? args : [args.box, args.key, args.data] }, params);
    };
    /**
     * Constructs a no op call for the getData(uint64)(string,string) ABI method
     *
     * @param args Any args for the contract call
     * @param params Any additional parameters for the call
     * @returns A TypedCallParams object for the call
     */
    RegisterCallFactory.getData = function (args, params) {
        return __assign({ method: 'getData(uint64)(string,string)', methodArgs: Array.isArray(args) ? args : [args.box] }, params);
    };
    return RegisterCallFactory;
}());
exports.RegisterCallFactory = RegisterCallFactory;
/**
 * A client to make calls to the Register smart contract
 */
var RegisterClient = /** @class */ (function () {
    /**
     * Creates a new instance of `RegisterClient`
     *
     * @param appDetails appDetails The details to identify the app to deploy
     * @param algod An algod client instance
     */
    function RegisterClient(appDetails, algod) {
        this.algod = algod;
        this.sender = appDetails.sender;
        this.appClient = algokit.getAppClient(__assign(__assign({}, appDetails), { app: exports.APP_SPEC }), algod);
    }
    /**
     * Checks for decode errors on the AppCallTransactionResult and maps the return value to the specified generic type
     *
     * @param result The AppCallTransactionResult to be mapped
     * @param returnValueFormatter An optional delegate to format the return value if required
     * @returns The smart contract response with an updated return value
     */
    RegisterClient.prototype.mapReturnValue = function (result, returnValueFormatter) {
        var _a, _b, _c;
        if ((_a = result.return) === null || _a === void 0 ? void 0 : _a.decodeError) {
            throw result.return.decodeError;
        }
        var returnValue = ((_b = result.return) === null || _b === void 0 ? void 0 : _b.returnValue) !== undefined && returnValueFormatter !== undefined
            ? returnValueFormatter(result.return.returnValue)
            : (_c = result.return) === null || _c === void 0 ? void 0 : _c.returnValue;
        return __assign(__assign({}, result), { return: returnValue });
    };
    /**
     * Calls the ABI method with the matching signature using an onCompletion code of NO_OP
     *
     * @param typedCallParams An object containing the method signature, args, and any other relevant parameters
     * @param returnValueFormatter An optional delegate which when provided will be used to map non-undefined return values to the target type
     * @returns The result of the smart contract call
     */
    RegisterClient.prototype.call = function (typedCallParams, returnValueFormatter) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.mapReturnValue;
                        return [4 /*yield*/, this.appClient.call(typedCallParams)];
                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent(), returnValueFormatter])];
                }
            });
        });
    };
    /**
     * Idempotently deploys the Register smart contract.
     *
     * @param params The arguments for the contract calls and any additional parameters for the call
     * @returns The deployment result
     */
    RegisterClient.prototype.deploy = function (params) {
        var _a;
        if (params === void 0) { params = {}; }
        var createArgs = (_a = params.createCall) === null || _a === void 0 ? void 0 : _a.call(params, RegisterCallFactory.create);
        return this.appClient.deploy(__assign(__assign({}, params), { createArgs: createArgs, createOnCompleteAction: createArgs === null || createArgs === void 0 ? void 0 : createArgs.onCompleteAction }));
    };
    Object.defineProperty(RegisterClient.prototype, "create", {
        /**
         * Gets available create methods
         */
        get: function () {
            var $this = this;
            return {
                /**
                 * Creates a new instance of the Register smart contract using the createApplication()void ABI method.
                 *
                 * @param args The arguments for the smart contract call
                 * @param params Any additional parameters for the call
                 * @returns The create result
                 */
                createApplication: function (args_1) {
                    return __awaiter(this, arguments, void 0, function (args, params) {
                        var _a, _b;
                        if (params === void 0) { params = {}; }
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    _b = (_a = $this).mapReturnValue;
                                    return [4 /*yield*/, $this.appClient.create(RegisterCallFactory.create.createApplication(args, params))];
                                case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
                            }
                        });
                    });
                },
            };
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Makes a clear_state call to an existing instance of the Register smart contract.
     *
     * @param args The arguments for the bare call
     * @returns The clear_state result
     */
    RegisterClient.prototype.clearState = function (args) {
        if (args === void 0) { args = {}; }
        return this.appClient.clearState(args);
    };
    /**
     * Calls the addData(uint64,string,string)void ABI method.
     *
     * @param args The arguments for the contract call
     * @param params Any additional parameters for the call
     * @returns The result of the call
     */
    RegisterClient.prototype.addData = function (args, params) {
        if (params === void 0) { params = {}; }
        return this.call(RegisterCallFactory.addData(args, params));
    };
    /**
     * Calls the getData(uint64)(string,string) ABI method.
     *
     * @param args The arguments for the contract call
     * @param params Any additional parameters for the call
     * @returns The result of the call
     */
    RegisterClient.prototype.getData = function (args, params) {
        if (params === void 0) { params = {}; }
        return this.call(RegisterCallFactory.getData(args, params));
    };
    /**
     * Extracts a binary state value out of an AppState dictionary
     *
     * @param state The state dictionary containing the state value
     * @param key The key of the state value
     * @returns A BinaryState instance containing the state value, or undefined if the key was not found
     */
    RegisterClient.getBinaryState = function (state, key) {
        var value = state[key];
        if (!value)
            return undefined;
        if (!('valueRaw' in value))
            throw new Error("Failed to parse state value for ".concat(key, "; received an int when expected a byte array"));
        return {
            asString: function () {
                return value.value;
            },
            asByteArray: function () {
                return value.valueRaw;
            }
        };
    };
    /**
     * Extracts a integer state value out of an AppState dictionary
     *
     * @param state The state dictionary containing the state value
     * @param key The key of the state value
     * @returns An IntegerState instance containing the state value, or undefined if the key was not found
     */
    RegisterClient.getIntegerState = function (state, key) {
        var value = state[key];
        if (!value)
            return undefined;
        if ('valueRaw' in value)
            throw new Error("Failed to parse state value for ".concat(key, "; received a byte array when expected a number"));
        return {
            asBigInt: function () {
                return typeof value.value === 'bigint' ? value.value : BigInt(value.value);
            },
            asNumber: function () {
                return typeof value.value === 'bigint' ? Number(value.value) : value.value;
            },
        };
    };
    /**
     * Returns the smart contract's global state wrapped in a strongly typed accessor with options to format the stored value
     */
    RegisterClient.prototype.getGlobalState = function () {
        return __awaiter(this, void 0, void 0, function () {
            var state;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.appClient.getGlobalState()];
                    case 1:
                        state = _a.sent();
                        return [2 /*return*/, {
                                get myMeta() {
                                    return RegisterClient.getBinaryState(state, 'myMeta');
                                },
                            }];
                }
            });
        });
    };
    RegisterClient.prototype.compose = function () {
        var client = this;
        var atc = new algosdk_1.AtomicTransactionComposer();
        var promiseChain = Promise.resolve();
        var resultMappers = [];
        return {
            addData: function (args, params) {
                promiseChain = promiseChain.then(function () { return client.addData(args, __assign(__assign({}, params), { sendParams: __assign(__assign({}, params === null || params === void 0 ? void 0 : params.sendParams), { skipSending: true, atc: atc }) })); });
                resultMappers.push(undefined);
                return this;
            },
            getData: function (args, params) {
                promiseChain = promiseChain.then(function () { return client.getData(args, __assign(__assign({}, params), { sendParams: __assign(__assign({}, params === null || params === void 0 ? void 0 : params.sendParams), { skipSending: true, atc: atc }) })); });
                resultMappers.push(undefined);
                return this;
            },
            clearState: function (args) {
                promiseChain = promiseChain.then(function () { return client.clearState(__assign(__assign({}, args), { sendParams: __assign(__assign({}, args === null || args === void 0 ? void 0 : args.sendParams), { skipSending: true, atc: atc }) })); });
                resultMappers.push(undefined);
                return this;
            },
            addTransaction: function (txn, defaultSender) {
                var _this = this;
                promiseChain = promiseChain.then(function () { return __awaiter(_this, void 0, void 0, function () { var _a, _b; return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            _b = (_a = atc).addTransaction;
                            return [4 /*yield*/, algokit.getTransactionWithSigner(txn, defaultSender !== null && defaultSender !== void 0 ? defaultSender : client.sender)];
                        case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
                    }
                }); }); });
                return this;
            },
            atc: function () {
                return __awaiter(this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, promiseChain];
                            case 1:
                                _a.sent();
                                return [2 /*return*/, atc];
                        }
                    });
                });
            },
            simulate: function (options) {
                return __awaiter(this, void 0, void 0, function () {
                    var result;
                    var _a;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0: return [4 /*yield*/, promiseChain];
                            case 1:
                                _b.sent();
                                return [4 /*yield*/, atc.simulate(client.algod, new algosdk_1.modelsv2.SimulateRequest(__assign({ txnGroups: [] }, options)))];
                            case 2:
                                result = _b.sent();
                                return [2 /*return*/, __assign(__assign({}, result), { returns: (_a = result.methodResults) === null || _a === void 0 ? void 0 : _a.map(function (val, i) { return resultMappers[i] !== undefined ? resultMappers[i](val.returnValue) : val.returnValue; }) })];
                        }
                    });
                });
            },
            execute: function (sendParams) {
                return __awaiter(this, void 0, void 0, function () {
                    var result;
                    var _a;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0: return [4 /*yield*/, promiseChain];
                            case 1:
                                _b.sent();
                                return [4 /*yield*/, algokit.sendAtomicTransactionComposer({ atc: atc, sendParams: sendParams }, client.algod)];
                            case 2:
                                result = _b.sent();
                                return [2 /*return*/, __assign(__assign({}, result), { returns: (_a = result.returns) === null || _a === void 0 ? void 0 : _a.map(function (val, i) { return resultMappers[i] !== undefined ? resultMappers[i](val.returnValue) : val.returnValue; }) })];
                        }
                    });
                });
            }
        };
    };
    return RegisterClient;
}());
exports.RegisterClient = RegisterClient;
//# sourceMappingURL=RegisterClient.js.map